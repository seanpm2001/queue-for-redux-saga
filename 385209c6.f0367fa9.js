(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{94:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return o})),t.d(a,"rightToc",(function(){return u})),t.d(a,"metadata",(function(){return d})),t.d(a,"default",(function(){return l}));var n=t(1),r=t(6),i=(t(0),t(110)),o={id:"setSagaRunner",title:"setSagaRunner",sidebar_label:"setSagaRunner",hide_title:!0},u=[{value:"Parameters",id:"parameters",children:[]},{value:"Usage",id:"usage",children:[{value:"Example without Redux Toolkit",id:"example-without-redux-toolkit",children:[]},{value:"Example with Redux Toolkit",id:"example-with-redux-toolkit",children:[]}]}],d={id:"api/setSagaRunner",title:"setSagaRunner",description:"# `setSagaRunner`",source:"@site/docs/api/setSagaRunner.md",permalink:"/queue-for-redux-saga/docs/api/setSagaRunner",sidebar_label:"setSagaRunner",sidebar:"docs",previous:{title:"runSaga",permalink:"/queue-for-redux-saga/docs/api/runSaga"},next:{title:"getQueuedSagas",permalink:"/queue-for-redux-saga/docs/api/getQueuedSagas"}},s={rightToc:u,metadata:d},c="wrapper";function l(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(i.b)(c,Object(n.a)({},s,t,{components:a,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"setsagarunner"},Object(i.b)("inlineCode",{parentName:"h1"},"setSagaRunner")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"setSagaRunner")," is only needed when not using ",Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"/queue-for-redux-saga/docs/api/configureSagaStore"}),Object(i.b)("inlineCode",{parentName:"a"},"configureSagaStore")),".")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"If not using ",Object(i.b)("a",Object(n.a)({parentName:"strong"},{href:"/queue-for-redux-saga/docs/api/configureSagaStore"}),Object(i.b)("inlineCode",{parentName:"a"},"configureSagaStore"))),", ",Object(i.b)("inlineCode",{parentName:"p"},"setSagaRunner")," must be called after configuring the Redux Store, in order to pass the sagaMiddleware instance to ",Object(i.b)("strong",{parentName:"p"},"Queue for Redux-Saga"),".\nThis will run any queued Sagas, and clears the queue."),Object(i.b)("h2",{id:"parameters"},"Parameters"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"sagaRunner")," - The sagaMiddleware instance used to configure the Redux Store."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h3",{id:"example-without-redux-toolkit"},"Example without Redux Toolkit"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { setSagaRunner } from '@vmw/queue-for-redux-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(sagaMiddleware)\n);\n\nsetSagaRunner(sagaMiddleware);\n")),Object(i.b)("h3",{id:"example-with-redux-toolkit"},"Example with Redux Toolkit"),Object(i.b)("p",null,"Use ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"/queue-for-redux-saga/docs/api/configureSagaStore"}),Object(i.b)("inlineCode",{parentName:"a"},"configureSagaStore"))))}l.isMDXComponent=!0}}]);